---
import Row from "@/components/grid/ThreeColumnGrid.astro";
import CascadeFundLogo from "./Logo.astro";
import LoginNavItem from "./AuthNavItem";
import { GridStyle } from "@/types/eventTypes";
import LandingNavbar, {
  type ItemName as LandingItemName,
} from "./LandingNavbar.astro";

interface Props {
  active?: string;
  hideLinks?: string[];
  subtitle?: any; // header left
}

const { subtitle, active, hideLinks } = Astro.props;
---

<header
  class={`h-14 -pt-2 bg-white shadow-sm border-b border-gray-200  fixed top-0 right-0 left-0 z-10`}
>
  <div
    class={`navbar bg-base-100 shadow-sm ${GridStyle.section.padding!.x} h-14`}
  >
    <div class="navbar-start">
      <div class="dropdown">
        <div tabindex={0} role="button" class="btn btn-ghost lg:hidden">
          <svg
            xmlns="http://www.w3.org/2000/svg"
            class="h-5 w-5"
            fill="none"
            viewBox="0 0 24 24"
            stroke="currentColor"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M4 6h16M4 12h8m-8 6h16"></path>
          </svg>
        </div>
        <LandingNavbar
          tabIndex="-1"
          className="lg:hidden menu menu-sm dropdown-content bg-base-100 rounded-box z-1 mt-3 w-95 ml-4 pl-6 shadow"
          active={active ? (active as LandingItemName) : undefined}
          hideLinks={hideLinks ? (hideLinks as LandingItemName[]) : undefined}
          vertical={true}
          ><slot />
        </LandingNavbar>
      </div>
      <CascadeFundLogo />
    </div>
    <div class="navbar-center hidden lg:flex lg:min-w-[50vw]">
      <LandingNavbar
        className="space-x-6 h-14"
        active={active ? (active as LandingItemName) : undefined}
        hideLinks={hideLinks ? (hideLinks as LandingItemName[]) : undefined}
        ><slot />
      </LandingNavbar>
    </div>
    <div class="navbar-end">
      <LoginNavItem />
    </div>
  </div>
</header>
