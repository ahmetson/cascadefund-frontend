---
import Badge from "@/components/custom-ui/Badge";
import MenuItem from "../panel/MenuItem";

export enum ItemName {
  ProjectList = "ProjectList",
  ProjectName = "ProjectName",
}

interface Props {
  tabIndex?: any;
  active?: ItemName;
  hideLinks?: ItemName[];
  className?: string;
  vertical?: boolean;
}

const { tabIndex, vertical, active, hideLinks, className } = Astro.props;

const isItemShown = (item: ItemName): boolean => {
  return (
    active !== item &&
    (hideLinks === undefined || hideLinks.findIndex((el) => el === item) == -1)
  );
};
---

<nav
  class={` ${className || ""} z-999! ${vertical ? "shadow-lg w-40" : "w-full"}`}
  tabindex={tabIndex}
>
  <slot />
  <div class={vertical ? "text-sm " : "breadcrumbs text-sm"}>
    <ul class={vertical ? "flex flex-col " : "w-full justify-center"}>
      {
        isItemShown(ItemName.ProjectList) && (
          <li class="">
            <MenuItem
              icon={"project-info"}
              label="Projects"
              href="/data/projects"
              active={active === ItemName.ProjectList}
              badges={[
                {
                  children: "2",
                  variant: "blue",
                  active: active === ItemName.ProjectList,
                },
                {
                  children: "2",
                  variant: "red",
                  active: active === ItemName.ProjectList,
                },
              ]}
            >
              Projects
            </MenuItem>
          </li>
        )
      }
      {
        isItemShown(ItemName.ProjectName) && (
          <li>
            <MenuItem
              icon={"project-info"}
              label="Reflect"
              href="/data/project"
              active={active === ItemName.ProjectName}
            >
              Reflect
            </MenuItem>
          </li>
        )
      }
    </ul>
  </div>
</nav>
