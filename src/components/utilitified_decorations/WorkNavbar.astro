---
import Badge from "@/components/Badge";
import C from "./NavigatingItem";

export enum ItemName {
  ProjectList = "ProjectList",
  ProjectName = "ProjectName",
}

interface Props {
  tabIndex?: any;
  active?: ItemName;
  hideLinks?: ItemName[];
  className?: string;
  vertical?: boolean;
}

const { tabIndex, vertical, active, hideLinks, className } = Astro.props;

const isItemShown = (item: ItemName): boolean => {
  return (
    active !== item &&
    (hideLinks === undefined || hideLinks.findIndex((el) => el === item) == -1)
  );
};
---

<nav class={`w-full ${className || ""}`} tabindex={tabIndex}>
  <slot />
  <div class={vertical ? "text-sm" : "breadcrumbs text-sm"}>
    <ul class={vertical ? "flex flex-col" : "w-full justify-center"}>
      {
        isItemShown(ItemName.ProjectList) && (
          <li>
            <C href="/data/projects" active={active === ItemName.ProjectList}>
              Projects
              <Badge variant="blue">2</Badge>
              <Badge variant="red">2</Badge>
            </C>
          </li>
        )
      }
      {
        isItemShown(ItemName.ProjectName) && (
          <li>
            <C href="/data/project" active={active === ItemName.ProjectName}>
              Reflect
            </C>
          </li>
        )
      }
    </ul>
  </div>
</nav>
