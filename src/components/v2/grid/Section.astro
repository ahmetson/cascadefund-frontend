---
import Button from '@/components/v2/Button'
import { type SectionProps, SectionBgType} from '@/types/eventTypes'
import Icon from '@/components/v2/grid/SectionIcon.astro'
import DynamicReactImporter from './DynamicReactImporter';

type Props = SectionProps;

let {title, actions, bg, icon} = Astro.props
if (bg === undefined) {
  bg = {
    sectionBgType: SectionBgType.normalSection
  }
}

const heroSectionBg = "bg-gradient-to-br from-blue-900 via-blue-800 to-purple-900 text-white"
const normalSectionBg = "network-bg text-white"
const infoSectionBg = "bg-gray-100"
let sectionClassName = bg.sectionBgType === SectionBgType.heroSection ? 
  heroSectionBg 
  : bg.sectionBgType === SectionBgType.normalSection ? normalSectionBg 
  : infoSectionBg
// Overlay behind it makes the background as the container
sectionClassName += !bg.overlay ? "" : " relative overflow-hidden "

---
    <section class={"py-20 " + sectionClassName}>
      {bg.overlay === "circles" && <div class="absolute inset-0 opacity-10 z-0">
        <div class="absolute top-10 left-10 w-4 h-4 bg-blue-400 rounded-full"></div>
        <div class="absolute top-20 right-20 w-6 h-6 bg-purple-400 rounded-full"></div>
        <div class="absolute bottom-20 left-20 w-5 h-5 bg-green-400 rounded-full"></div>
        <div class="absolute bottom-10 right-10 w-3 h-3 bg-yellow-400 rounded-full"></div>
        <div class="absolute top-1/2 left-1/4 w-8 h-8 bg-pink-400 rounded-full"></div>
        <div class="absolute top-1/3 right-1/3 w-7 h-7 bg-indigo-400 rounded-full"></div>
      </div>}
      {bg.overlay === 'rectangles' && <div class="absolute inset-0 opacity-20 z-0">
        <div class="absolute top-10 left-10 w-16 h-16 border border-yellow-400 rounded-lg transform rotate-12"></div>
        <div class="absolute top-20 right-20 w-12 h-12 border border-blue-400 rounded-full"></div>
        <div class="absolute bottom-20 left-20 w-20 h-20 border border-green-400 rounded-lg transform -rotate-12"></div>
        <div class="absolute bottom-10 right-10 w-8 h-8 border border-purple-400 rounded-full"></div>
      </div>}
      <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center z-2">
        {icon && <Icon ><DynamicReactImporter element={icon} /></Icon>}
        <h1 class="text-4xl md:text-5xl font-bold mb-6">
          {title}
        </h1>
        
        <p class="text-xl mb-8 text-blue-100 max-w-3xl mx-auto">
          <slot />
        </p>
                
        {actions &&
          <div class="flex flex-col sm:flex-row gap-4 justify-center">
            {actions.map((action) => (
              action.replaceWithChildren ? <DynamicReactImporter element={action.children} /> : 
              <Button variant={action.variant} size="lg">{action.children}</Button>
            ))}
          </div>
        }
      </div>
    </section>

    <style>
    .network-bg {
      background: linear-gradient(135deg, #1a1a2e 0%, #16213e 50%, #0f3460 100%);
    }

    .gradient-bg {
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    }
    </style>