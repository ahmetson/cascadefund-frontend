---
import V2Layout from "@/layouts/PanelViewLayout.astro";
import {
  ItemName,
  type Navigation,
} from "@/components/utilitified_decorations/WorkNavbar.astro";
import NavLabelElement from "@/components/utilitified_decorations/NavigatingItem";
export const replacement: Navigation = {};
replacement[ItemName.ProjectName] = await NavLabelElement({
  children: "Add New Project",
  active: true,
});

import IssueSelector from "@/components/project/ProjectIssueListPanel";
import CallToAddIssuePanel from "@/components/project/CallToAddIssuePanel";
import BackButton from "@/components/utilitified_decorations/BackButton";
import ListPanel from "@/components/utilitified_decorations/ListPanel";
import ForkDetectionInfo from "@/components/project/ForkDetectionInfoPanel";
import ForkOriginInfoPanel from "@/components/project/ForkOriginInfoPanel";

const discoveryItems = [
  {
    title: "What is issue?",
    description:
      "In CascadeFund, an issue is any message such as a feature, idea, bug, question or discussion.",
  },
  {
    title: "Why to attach an issue?",
    description:
      "By attaching an issue, you make your app discoverable via the issue on the original project.",
  },
];

const selectedIssueItems = [
  { name: "NodeDB Toolkit", number: "#142" },
  { name: "React Component Library", number: "#12" },
  { name: "SecureAuth Framework", number: "#12" },
  { name: "CloudScale API", number: "#12" },
  { name: "MobileUI Framework", number: "Custom" },
];
---

<V2Layout activeLink={ItemName.ProjectName} replacement={replacement}>
  <BackButton slot="left" />
  <ForkDetectionInfo slot="center" />
  <ForkOriginInfoPanel slot="center" />
  <IssueSelector
    selectedIssues={[]}
    onIssueSelect={console.log}
    slot="center"
  />

  <ListPanel slot="right" title="Discovery" items={discoveryItems} />

  <CallToAddIssuePanel slot="right" />

  <ListPanel
    slot="right"
    title="Selected Issues"
    items={selectedIssueItems}
    showNumbers={true}
  />
</V2Layout>
