---
import V2Layout from "@/layouts/LandingLayout.astro";
import { ItemName } from "@/components/utilitified_decorations/LandingNavbar.astro";

import HeroSection from "@/components/grid/HeroSection.astro";
import HorizontalPanels from "@/components/grid/HorizontalPanelsSection.astro";
import ThreeColumnGrid from "@/components/grid/ThreeColumnGrid.astro";
import RowGrid from "@/components/grid/RowGrid";
import UserIcon from "@/components/icon/UserIcon";
import { BgType } from "@/types/eventTypes";
import { type RoleCardProps as RolePanelProps } from "@/components/RoleCard";
import type { NumeratedInfoProps } from "@/components/utilitified_decorations/NumeratedInfoPanel";
import Section from "@/components/grid/Section.astro";
import NumeratedInfo from "@/components/utilitified_decorations/NumeratedInfoPanel";
import TwoColumnGrid from "@/components/grid/TwoColumnGrid.astro";
import Panel from "@/components/utilitified_decorations/PagePanel";
import PlayIcon from "@/components/icon/PlayIcon";

const heroSection = {
  title: "How CascadeFund Works",
  actions: [{ variant: "green", children: "Getting Started", href: "/login/" }],
  bg: {
    sectionBgType: BgType.purpleToTealViaBlue,
  },
};

const castMembers: RolePanelProps[] = [
  {
    roleCard: true,
    id: "1",
    title: "Maintainer",
    buttonText: "The Creator",
    buttonVariant: "bg-gray-100 text-blue-600",
    description:
      "The original creator who manages the project and makes key decisions about its direction and development.",
    avatar: "https://dummyimage.com/120x120/f3f4f6/374151?text=M",
  },
  {
    roleCard: true,
    id: "2",
    title: "Contributor",
    buttonText: "The Helper",
    buttonVariant: "bg-gray-100 text-blue-600",
    description:
      "Developers who help improve the project by submitting code, fixing bugs, and adding new features.",
    avatar: "https://dummyimage.com/120x120/dbeafe/1e40af?text=C",
  },
  {
    roleCard: true,
    id: "3",
    title: "Influencer",
    buttonText: "The Promoter",
    buttonVariant: "bg-gray-100 text-blue-600",
    description:
      "Users who advocate for and promote the project to help it gain visibility and attract more contributors.",
    avatar: "https://dummyimage.com/120x120/ecfdf5/059669?text=I",
  },
];

const steps: (NumeratedInfoProps & { id: string })[] = [
  {
    id: "1",
    number: 1,
    title: "Maintainer signs up",
    description:
      "Open source maintainer creates an account to start receiving funding for their projects.",
    icon: "user-plus",
  },
  {
    id: "2",
    number: 2,
    title: "Adds repository",
    description: "Maintainer connects their GitHub repository to the platform.",
    icon: "code",
  },
  {
    id: "3",
    number: 3,
    title: "Gets share links — spreads word",
    description:
      "Maintainer receives shareable links and starts promoting their project to potential supporters.",
    icon: "share",
  },
  {
    id: "4",
    number: 4,
    title: "CascadeFund analyzes repo — creates quests",
    description:
      "Platform analyzes the repository and creates meaningful quests and contribution opportunities.",
    icon: "search",
  },
  {
    id: "5",
    number: 5,
    title: "User creates — gains voting power",
    description:
      "Users create accounts and gain voting power by contributing to projects and completing quests.",
    icon: "users",
  },
  {
    id: "6",
    number: 6,
    title: "User provides issues",
    description:
      "Users can submit issues and feature requests to help improve the project.",
    icon: "exclamation",
  },
  {
    id: "7",
    number: 7,
    title: "Maintainer works on issues",
    description:
      "Maintainer addresses submitted issues based on community feedback and voting.",
    icon: "cog",
  },
  {
    id: "8",
    number: 8,
    title: "Issues become quests",
    description:
      "Issues are transformed into actionable quests that contributors can work on.",
    icon: "flag",
  },
  {
    id: "9",
    number: 9,
    title: "Issues resolved — ratings distributed",
    description:
      "Completed issues result in ratings and rewards being distributed to contributors.",
    icon: "check-circle",
  },
  {
    id: "10",
    number: 10,
    title: "Repeat cycle",
    description:
      "The process continues with new issues, quests, and contributions.",
    icon: "refresh",
  },
];

interface Scenario {
  id: string;
  title: string;
  description: string;
  characters: Array<{
    name: string;
    role: string;
    avatar: string;
  }>;
}

const scenarios: Scenario[] = [
  {
    id: "1",
    title: "Delegate",
    description:
      "Sometimes a maintainer gets busy. They delegate tasks to trusted contributors who can help manage the project and make decisions on their behalf.",
    characters: [
      {
        name: "Maintainer",
        role: "Project Owner",
        avatar: "https://dummyimage.com/60x60/f3f4f6/374151?text=M",
      },
      {
        name: "Core Contributor",
        role: "Trusted Helper",
        avatar: "https://dummyimage.com/60x60/dbeafe/1e40af?text=C",
      },
    ],
  },
  {
    id: "2",
    title: "Discoverable Fork",
    description:
      "If the project is abandoned or neglected, contributors can create discoverable forks that the community can find and support instead.",
    characters: [
      {
        name: "New Maintainer",
        role: "Fork Creator",
        avatar: "https://dummyimage.com/60x60/ecfdf5/059669?text=N",
      },
      {
        name: "Community",
        role: "Supporters",
        avatar: "https://dummyimage.com/60x60/fef3c7/d97706?text=C",
      },
      {
        name: "Contributor",
        role: "Helper",
        avatar: "https://dummyimage.com/60x60/dbeafe/1e40af?text=H",
      },
    ],
  },
];
---

<V2Layout active={ItemName.HowItWork} subtitle="How does CascadeFund work?">
  <HeroSection {...heroSection}>
    A story of Maintainers, Contributors, and Influencers working together.
    <div class="mb-12">
      <div class="flex justify-center items-center space-x-4">
        <div
          class="w-16 h-16 bg-orange-400 rounded-full flex items-center justify-center"
        >
          <UserIcon />
        </div>
        <div
          class="w-16 h-16 bg-blue-400 rounded-full flex items-center justify-center"
        >
          <UserIcon />
        </div>
        <div
          class="w-16 h-16 bg-teal-400 rounded-full flex items-center justify-center"
        >
          <UserIcon />
        </div>
      </div>
    </div>
  </HeroSection>
  <HorizontalPanels
    cols={3}
    panels={castMembers}
    bg={{ sectionBgType: BgType.infoSection }}
    title="Meet the Cast"
  />

  <Section
    title="The Story in 10 Steps"
    bg={{ sectionBgType: BgType.infoSection, overlay: "rectangles" }}
  >
    <ThreeColumnGrid centerPercents={"3/4"}>
      <RowGrid slot="center" cols={2}>
        {
          steps.map((step) => (
            <NumeratedInfo
              data-key={step.id}
              number={step.number}
              title={step.title}
              description={step.description}
              icon={step.icon}
            />
          ))
        }
      </RowGrid>
    </ThreeColumnGrid>
  </Section>

  <Section bg={{ sectionBgType: BgType.infoSection, overlay: "rectangles" }}>
    <ThreeColumnGrid centerPercents={"1/3"} centerClassName="flex">
      <Panel
        slot="left"
        title={scenarios[0].title}
        key={scenarios[0].id}
        className=" p-8 w-full "
      >
        <p class="text-gray-600 leading-relaxed">
          {scenarios[0].description}
        </p>

        <div class="flex items-center space-x-4">
          {
            scenarios[0].characters.map((character) => (
              <div class="text-center">
                <img
                  src={character.avatar}
                  alt={character.name}
                  class="w-16 h-16 rounded-full mx-auto mb-2"
                  referrerpolicy="no-referrer"
                />
                <p class="text-sm font-medium text-gray-900">
                  {character.name}
                </p>
                <p class="text-xs text-gray-500">{character.role}</p>
              </div>
            ))
          }
        </div>
      </Panel>
      <Panel
        slot="right"
        title={scenarios[1].title}
        key={scenarios[1].id}
        className=" p-8 w-full "
      >
        <p class="text-gray-600 leading-relaxed">
          {scenarios[1].description}
        </p>

        <div class="flex items-center space-x-4">
          {
            scenarios[1].characters.map((character) => (
              <div class="text-center">
                <img
                  src={character.avatar}
                  alt={character.name}
                  class="w-16 h-16 rounded-full mx-auto mb-2"
                  referrerpolicy="no-referrer"
                />
                <p class="text-sm font-medium text-gray-900">
                  {character.name}
                </p>
                <p class="text-xs text-gray-500">{character.role}</p>
              </div>
            ))
          }
        </div>
      </Panel>
      <h1 class="text-center text-xl m-auto" slot="center">
        When Maintainer Can't Do It All
      </h1>
    </ThreeColumnGrid>
  </Section>
  <Section
    title="How Ratings and Voting Work"
    bg={{ sectionBgType: BgType.infoSection, overlay: "circles" }}
  >
    <TwoColumnGrid firstPercents={50}>
      <div class="space-y-2" slot="two-column-left">
        <Panel title="Voting Power" className="p-6">
          <p class="text-gray-600">
            The more impact a contributor makes, the more voting power they earn
            to influence project decisions.
          </p>
        </Panel>

        <Panel title="Quest Completion" className="p-6">
          <p class="text-gray-600">
            Users earn reputation and voting power by completing quests and
            contributing meaningfully to projects.
          </p>
        </Panel>

        <Panel title="Transparency" className="p-6">
          <p class="text-gray-600">
            All ratings and contributions are visible to the community to ensure
            fairness and accountability.
          </p>
        </Panel>
      </div>
      <div class="flex justify-center h-full" slot="two-column-right">
        <div class="relative m-auto">
          <div
            class="w-64 h-64 rounded-full border-8 border-gray-200 flex items-center justify-center"
          >
            <div class="text-center">
              <div class="text-4xl font-bold text-blue-600 mb-2">VOTE</div>
              <div class="text-sm text-gray-500">Community Driven</div>
            </div>
          </div>

          <div
            class="absolute top-4 right-4 w-12 h-12 bg-blue-500 rounded-full flex items-center justify-center text-white font-bold"
          >
            A
          </div>
          <div
            class="absolute bottom-4 left-4 w-12 h-12 bg-green-500 rounded-full flex items-center justify-center text-white font-bold"
          >
            B
          </div>
          <div
            class="absolute top-1/2 left-0 w-12 h-12 bg-orange-500 rounded-full flex items-center justify-center text-white font-bold transform -translate-y-1/2"
          >
            C
          </div>
          <div
            class="absolute top-1/2 right-0 w-12 h-12 bg-purple-500 rounded-full flex items-center justify-center text-white font-bold transform -translate-y-1/2"
          >
            D
          </div>
        </div>
      </div>
    </TwoColumnGrid>
  </Section>

  <Section
    title="See a website walkthrough"
    bg={{ sectionBgType: BgType.tealToRedViaLime, overlay: "circles" }}
  >
    <ThreeColumnGrid centerPercents={50}>
      <div
        slot="center"
        class="relative bg-gray-300 rounded-lg overflow-hidden mb-8"
        style={{ aspectRatio: "16/9" }}
      >
        <div class="absolute inset-0 flex items-center justify-center">
          <button
            class="w-20 h-20 bg-red-500 bg-opacity-70 rounded-full flex items-center justify-center hover:bg-opacity-80 transition-all block"
          >
            <PlayIcon />
          </button>
        </div>

        <div class="absolute top-4 left-4 space-y-2">
          <div class="w-8 h-8 bg-gray-600 rounded-full"></div>
          <div class="w-8 h-8 bg-gray-600 rounded-full"></div>
          <div class="w-8 h-8 bg-gray-600 rounded-full"></div>
        </div>

        <div class="absolute top-4 right-4 space-y-2">
          <div class="w-8 h-8 bg-gray-600 rounded-full"></div>
          <div class="w-8 h-8 bg-gray-600 rounded-full"></div>
          <div class="w-8 h-8 bg-gray-600 rounded-full"></div>
        </div>
      </div>
    </ThreeColumnGrid>
  </Section>

  <Section
    title="Ready to Join the CascadeFund Ecosystem?"
    bg={{ sectionBgType: BgType.redToPurpleViaLime, overlay: "circles" }}
    actions={[
      {
        variant: "green",
        children: "Start adding your project",
        href: "/login",
      },
    ]}
  >
    <p class="text-xl mb-8 opacity-90">
      Be part of a growing community where Maintainers, Contributors, and
      Influencers work together.
    </p>
  </Section>
</V2Layout>
